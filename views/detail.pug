extends layout
block content
  style.
    .icon-img {
      max-width: 30px;
      width: 100%;
    }
  - var sub_cate = [];
  each key in Object.keys(data.category_obj)
    if(data.category_obj[key].length > 0)
      - var sub_list = data.category_obj[key]
      each cate_item in sub_list
        - sub_cate.push(cate_item);
  .container
    .bg-gradient-zhupao
      a(href='/')
        img(src='/assets/images/pegasus_logo.jpg', alt='logo', style='width:250px;')
    .w-100.bg-gradient-primary.mb-3
      h5.m-0.text-white.p-2
        a.text-white(href='/') Home
        | &nbsp; > &nbsp;
        a.text-white(href='/list/' + cate_info[0].group_id + '/' + Object.keys(sub_cate[0])) #{cate_info[0].group_name}
        | &nbsp; > &nbsp; #{sub_cate[0][Object.keys(sub_cate[0])]}
    .row
      .col-8.text-zhupao
        h4.font-weight-bold #{data.data_title}
        h5.text-right 단위 : #{data.data_unit}
        .card
          .card-body.shadow
            canvas#chart(width='100%', height='50')
        h6.text-right.text-zhupao.mt-3 Data No. #{data.data_no}
      .col-4.font-weight-bold
        .d-flex.mb-2
          span.px-3.py-2(style='flex:1; border-bottom:4px solid #007bff') DOWNLOAD
          div.border-bottom(style='flex:2')
        .d-flex
          .border
            button.btn.d-flex.justify-content-between.p-2
              img.icon-img(src='/assets/svgs/png.svg')
              span PNG
          .border.ml-2
            button.btn.d-flex.justify-content-between.p-2
              img.icon-img(src='/assets/svgs/ppt.svg')
              span PNG
          .border.ml-2
            button.btn.d-flex.justify-content-between.p-2
              img.icon-img(src='/assets/svgs/xls.svg')
              span PNG
          .border.ml-2
            button.btn.d-flex.justify-content-between.p-2
              img.icon-img(src='/assets/svgs/pdf.svg')
              span PNG
        ul#pills-tab.nav.nav-pills.mt-4.mb-3.pb-2.border-bottom(role="tablist")
          li.nav-item
            a#pills-home-tab.nav-link.active.rounded-0.border.border-primary.py-1(data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true") DESCRIPTION
          li.nav-item
            a#pills-profile-tab.nav-link.rounded-0.border.border-primary.ml-1.py-1(data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false") SOURCE
        #pills-tabContent.tab-content
          #pills-home.tab-pane.fade.show.active(role="tabpanel" aria-labelledby="pills-home-tab") #{data.description}
          #pills-profile.tab-pane.fade(role="tabpanel" aria-labelledby="pills-profile-tab") #{data.source}
        .d-flex.justify-content-between
          a(href='' + config.request_report, target='_blank')
            img(src='/assets/images/RequestReport.JPG', width='100%')
          a(href='' + config.request_data, target='_blank')
            img(src='/assets/images/RequestData.JPG', width='100%')
block append_js
  script(src='/bootstrap/js/dist/util.js', type='text/javascript')
  script(src='/chart.js/Chart.js')
  script.
    let d = !{JSON.stringify(data)};
    console.log('d : ', d);
    // 차트 색 설정
    let bg_list = [
      'rgba(255, 99, 132, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 206, 86, 0.4)', 'rgba(75, 192, 192, 0.4)', 'rgba(153, 102, 255, 0.4)', 'rgba(255, 159, 64, 0.4)'
    ];
    // 차트 타입
    let chart_type = '';
    switch (d.chart_type) {
      case 'bar_chart_vertical':
        chart_type = 'bar';
        break;
      case 'bar_chart_horizontal':
        chart_type = 'horizontalBar';
        break;
      case 'pie_chart':
        chart_type = 'pie';
        break;
      case 'line_chart':
        chart_type = 'line';
        break;
    }
    let x = d.table_x;
    let y = d.table_y;
    let barChartData = {};

    // 파이차트의 경우 좌표를 재배열해준다.
    if (chart_type === 'pie') {
      barChartData.datasets = [];
      barChartData.labels = y.map(function (v) {
        return v.title
      });

      let size = x.content.length;
      // y 축 자료 피벗
      for (let i = 0; i < size; i++) {
        let new_y = {};
        let arr = [];
        let bg_arr = [];
        y.forEach(function (v, idx) {
          arr.push(v.content[i]);
          bg_arr.push(bg_list[idx % 6]);
        });
        new_y.data = arr;
        // new_y.label = x.content[i];
        new_y.label = x.content;
        new_y.backgroundColor = bg_arr;
        barChartData.datasets.push(new_y);
      }
      barChartData.datasets.sort(function (a, b) {
        return a.label < b.label ? 1 : -1
      });
    } else {
      barChartData.labels = d.table_x.content;
      barChartData.datasets = [];
      d.table_y.forEach(function (row, idx) {
        let obj = {};
        obj.label = row.title;
        obj.data = row.content;
        obj.backgroundColor = bg_list[idx % 6];
        barChartData.datasets.push(obj);
      });
    }
    console.log('barChartData : ', barChartData);
    let ctx = document.getElementById('chart');
    let chart = new Chart(ctx, {
      type: chart_type,
      data: barChartData,
      options: {
        scales: {
          xAxes: [{
            stacked: true
          }],
          yAxes: [
            {
              // ticks: {
              //   beginAtZero: true, callback: function (value, index, values) {
              //     // console.log(value, index, values);
              //   }
              // },
              stacked: true
            }]
        }
      }
    });