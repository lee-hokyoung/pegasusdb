extends layout
block content
  //  page 관련 변수
  - var metadata = list[0].metadata[0];
  - var total = parseInt(metadata ? metadata.total : 0);
  - var page = parseInt(metadata ? metadata.page : 1);
  - var limit = parseInt(metadata ? metadata.limit : 10);
  - var max_page = Math.ceil(total / limit);
  //  page grouping
  - var page_size = 10;
  - var page_group_size = Math.ceil(max_page / page_size)
  - var current_page_group = Math.ceil(page / page_size)
  - var init_page = (current_page_group - 1) * page_size + 1;
  - var last_page = max_page > current_page_group * page_size ? current_page_group * page_size : max_page;
  //  카테고리 관련 변수
  - var group_info = {}
  each item in cate_list
    if(item.cate_id === cate_item)
      - group_info = item;
  .container
    .bg-zhupao
      .d-flex.justify-content-between
        a(href='/')
          img(src='/assets/images/pegasus_logo.jpg', alt='logo', style='width:250px;')
        include nav
    .w-100.bg-lightblue.mb-3
      h5.m-0.text-white.p-2
        a.text-white(href='/') Home
        | &nbsp; > &nbsp; #{group_info.group_name} &nbsp; > &nbsp; 
        span#cate_info #{group_info.cate_name}
    .row.pt-3
      .col-3
        .p-2(style='border:1.5px solid rgb(209,209,209);')
          h5.mb-5.font-weight-bold.text-uppercase(style='color:rgb(31,33,99)') More filters
          // 카테고리
          .form-group.d-flex.justify-content-between
            label.font-weight-bold.text-lightblue.text-right Category
            select.selectpicker(name='category', data-width='fix')
              //- option(disabled) Category Select
              each cate in cate_list
                option(value=cate.cate_id, selected=cate.cate_id===cate_item, disabled=user_category.indexOf(cate.cate_id) === -1) !{cate.cate_name}
          // Region
          .form-group.d-flex.justify-content-between
            label.font-weight-bold.text-lightblue.text-right Region
            select.selectpicker.add_query(name='region', data-width='fix')
              option Region Select
              each region in region_list
                option(value=region.name, selected=region.name===strQuery.region) #{region.name} (#{region.cn_name})
              option.dropdown-divider(disabled)
              each city in city_list
                option(value=city.name, selected=city.name===strQuery.region) #{city.name} (#{city.cn_name})
          // Object
          .form-group.d-flex.justify-content-between
            label.font-weight-bold.text-lightblue.text-right Object
            select.selectpicker.add_query(name='object', data-width='fix')
              option Object Select
              each obj in object
                option(value=obj._id, selected=obj.name===strQuery.object) #{obj.name}
          .text-center.mt-5
            button.btn.btn-lightblue(type='button', onclick='fnSearchDetail()') DETAILED SEARCH
      .col-9
        .p-2(style='border:1.5px solid rgb(209, 209, 209);')
          h5.mb-5.font-weight-bold.text-uppercase(style='color:rgb(31,33,99)') Search Words
          form(onsubmit='searchList(); return false;')
            .input-group.mx-3.m-auto
              input.form-control#searchText(type='text', name='searchText', value=strQuery.searchText)
              .input-group-prepend
                button.btn.btn-lightblue(type='submit') Search
          h5.mt-5 Results
          select#list_size.selectpicker
            option(value=10, selected=limit===10) 10
            option(value=20, selected=limit===20) 20
            option(value=30, selected=limit===30) 30
            //- option(value=50, selected=limit===50) 50
            //- option(value=100, selected=limit===100) 100
        .list-group.mt-5
          each item in list[0].data
            - var region = item.region_array.concat(item.city_array);
            - var category = [];
            each obj in item.category_obj
              each o in obj
                if(typeof o === 'string')
                  - category.push(o);
                else
                  - category.push(o[Object.keys(o)])
            a.list-group.list-group-item-action.flex-row.my-1.py-2(href='/detail/'  + cate + '/' + cate_item + '/' + item._id, style='min-height:1px;')
              .col-2.text-center
                if(item.chart_type)
                  img.p-1(src='/assets/images/' + item.chart_type + '_user.JPG', alt='', style='width:70%;')
                else
                  img.p-1(src='/assets/images/image_data.JPG', alt='', style='width:70%;')
              .col-10.d-flex.flex-column.justify-content-around
                h5 #{item.data_title}
                .py-2.overflow-hidden(id='info_' + item._id, class=(category.length + region.length > 10 ? 'showMore':''))
                  span #{category}
                  span &nbsp; | &nbsp;
                  span #{region}
                  span &nbsp; | &nbsp;
                  span #{item.object}
              if((category.length + region.length) > 20)
                a.hidden-wrap.text-right.text-lightblue(href='#', data-toggle='showMore', data-target='#info_' + item._id, data-expanded='false')
    .row
      .col-12
        nav
          ul.pagination.justify-content-center
            li.page-item
              if(init_page > 10)
                button.btn.btn-link.page-link(data-page=init_page - 1, aria-label="Previous")
                  span(aria-hidden="true") «
                  span.sr-only Previous
              - var n = init_page;
              while n < last_page + 1
                li.page-item(class=n===parseInt(page)?'active':'')
                  button.btn.btn-link.page-link(type='button', data-page=n) #{n}
                - n++
              if(last_page < max_page)
                button.btn.btn-link.page-link(data-page=last_page + 1, aria-label="Next")
                  span(aria-hidden="true") »
                  span.sr-only Next
  #loading_page
    img(src='/assets/images/pegasus_loading.gif')
block append_js
  script(src='/assets/js/list.js', type='text/javascript')